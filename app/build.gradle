import com.igorganapolsky.vibratingwatchapp.buildsrc.Libs

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

kapt {
    correctErrorTypes = true
    useBuildCache = true
}

apply plugin: 'kotlin-android-extensions'
androidExtensions {
    experimental = true
}

repositories {
    maven {
        url "https://jitpack.io"
    }
}

android {
    compileSdkVersion 29

    defaultConfig {
        applicationId "com.igorganapolsky.vibratingwatchapp"
        minSdkVersion 24
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
    }

    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }

    lintOptions {
        // Disable lintVital. Not needed since lint is run on CI
        checkReleaseBuilds false
        // Allow lint to check dependencies
        checkDependencies true
        // Ignore any tests
        ignoreTestSources true

        disable 'GradleCompatible', 'FontValidationError'
    }

    dataBinding {
        enabled = true
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    packagingOptions {
        // Exclude AndroidX rvVersion files
        exclude 'META-INF/*.rvVersion'
        // Exclude consumer proguard files
        exclude 'META-INF/proguard/*'
        // Exclude the Firebase/Fabric/other random properties files
        exclude '/*.properties'
        exclude 'fabric/*.properties'
        exclude 'META-INF/*.properties'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    // Gradle can cache the SNAPSHOT builds. The following ensures Gradle always picks up the
    // ‘freshest’ version of the build.
    configurations.all {
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    }
}

dependencies {
    // kotlin libs
    implementation Libs.Kotlin.stdlib
    implementation Libs.Kotlin.reflect

    // wear libs
    implementation Libs.Wear.wear
    implementation Libs.Wear.wear_implementation
    kapt Libs.Wear.wear_compile_only

    // google libs
    implementation Libs.Google.material

    // androidx libs
    kapt Libs.AndroidX.Room.compiler
    kapt Libs.AndroidX.Room.runtime
    implementation Libs.AndroidX.Room.runtime
    testImplementation Libs.AndroidX.Room.testing
    implementation Libs.AndroidX.Lifecycle.extensions
    implementation Libs.AndroidX.percentLayout
    implementation Libs.AndroidX.legacySupport
    implementation Libs.AndroidX.recyclerview
    implementation Libs.AndroidX.recyclerviewSelection
    implementation Libs.AndroidX.appcompat
    implementation Libs.AndroidX.annotate
    implementation Libs.AndroidX.constraintlayout
    implementation Libs.AndroidX.Fragment.fragmentKtx
    implementation Libs.AndroidX.Activity.activityKtx
    implementation Libs.AndroidX.coreKtx

    // SeekArc lib
    implementation Libs.seekArc
}
